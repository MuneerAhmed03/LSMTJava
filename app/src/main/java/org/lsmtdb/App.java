/*
 * This source file was generated by the Gradle 'init' task
 */
package org.lsmtdb;

import org.lsmtdb.api.KeyValueStore;

import org.lsmtdb.common.AppConstants;
import java.io.IOException;

public class App {  


    public static void main(String[] args) throws IOException {
        try {
            KeyValueStore kv = KeyValueStore.getInstance(AppConstants.BASE_DB_PATH);
            
            System.out.println("testing put operations...");
            kv.put("key1", "value1");
            kv.put("key2", "value2");
            kv.put("key3", "value3");

            System.out.println("\ntesting get operations...");
            String value1 = kv.get("key1");
            String value2 = kv.get("key2");
            String value3 = kv.get("key3");

            System.out.println("key1: " + value1);
            System.out.println("key2: " + value2);
            System.out.println("key3: " + value3);

            System.out.println("\ntesting overwrite...");
            kv.put("key1", "new_value1");
            value1 = kv.get("key1");
            System.out.println("key1 after overwrite: " + value1);

            System.out.println("\ntesting memtable flush...");
            for (int i = 0; i < 5000000; i++) {
                kv.put("key" + i, "value" + i);
                // if(i%50000 == 0){
                // }
            }

            System.out.println("\ntesting delete operations...");
            // delete a key that exists
            kv.delete("key12500");

            value1 = kv.get("key12500");
            System.out.println("key12500 after delete: " + (value1 == null ? "null (deleted)" : value1));
            
            
            // verify other keys are still accessible
            // value2 = kv.get("key25000");
            // System.out.println("key25000 after delete: " + new String(value2, StandardCharsets.UTF_8));
            
            // test delete and put on same key
            kv.delete("key30000");
            kv.put("key30000", "new_value_after_delete");
            String value4 = kv.get("key30000");
            System.out.println("key30000 after delete and put: " + value4);
            
        } catch (IOException e) {
            System.err.println("error during test: " + e.getMessage());
            e.printStackTrace();
        }
    }
}
